//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.16 at 03:49:38 PM EET 
//


package org.xmlsoap.schemas.wsdl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * <p>Java class for tDefinitions complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDefinitions">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.xmlsoap.org/wsdl/}tExtensibleDocumented">
 *       &lt;sequence>
 *         &lt;group ref="{http://schemas.xmlsoap.org/wsdl/}anyTopLevelOptionalElement" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="targetNamespace" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDefinitions", propOrder = {
    "anyTopLevelOptionalElement"
})
public class TDefinitions
    extends TExtensibleDocumented
{

    @XmlElements({
        @XmlElement(name = "import", type = TImport.class),
        @XmlElement(name = "types", type = TTypes.class),
        @XmlElement(name = "message", type = TMessage.class),
        @XmlElement(name = "portType", type = TPortType.class),
        @XmlElement(name = "binding", type = TBinding.class),
        @XmlElement(name = "service", type = TService.class)
    })
    protected List<TDocumented> anyTopLevelOptionalElement;
    @XmlAttribute(name = "targetNamespace")
    @XmlSchemaType(name = "anyURI")
    protected String targetNamespace;
    @XmlAttribute(name = "name")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String name;

    /**
     * Gets the value of the anyTopLevelOptionalElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the anyTopLevelOptionalElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnyTopLevelOptionalElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TImport }
     * {@link TTypes }
     * {@link TMessage }
     * {@link TPortType }
     * {@link TBinding }
     * {@link TService }
     * 
     * 
     */
    public List<TDocumented> getAnyTopLevelOptionalElement() {
        if (anyTopLevelOptionalElement == null) {
            anyTopLevelOptionalElement = new ArrayList<TDocumented>();
        }
        return this.anyTopLevelOptionalElement;
    }

    /**
     * Gets the value of the targetNamespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetNamespace() {
        return targetNamespace;
    }

    /**
     * Sets the value of the targetNamespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetNamespace(String value) {
        this.targetNamespace = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }
    
    // Convenience Methods

//    @XmlElement(name = "import", type = TImport.class),
//    @XmlElement(name = "types", type = TTypes.class),
//    @XmlElement(name = "message", type = TMessage.class),
//    @XmlElement(name = "portType", type = TPortType.class),
//    @XmlElement(name = "binding", type = TBinding.class),
//    @XmlElement(name = "service", type = TService.class)
    

    
    public List<TService> getService(){
    	List<TService> list = new ArrayList<TService>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TService){
    			list.add((TService)el);
    		}
    	}
    	return list;
    }
    
    public List<TMessage> getMessages(){
    	List<TMessage> list = new ArrayList<TMessage>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TMessage){
    			list.add((TMessage)el);
    		}
    	}
    	return list;
    }
    
    public List<TPortType> getPortTypes(){
    	List<TPortType> list = new ArrayList<TPortType>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TPortType){
    			list.add((TPortType)el);
    		}
    	}
    	return list;
    }
    
    public List<TTypes> getTypes(){
    	List<TTypes> list = new ArrayList<TTypes>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TTypes){
    			list.add((TTypes)el);
    		}
    	}
    	return list;
    }
    

    public List<TBinding> getBindings(){
    	List<TBinding> list = new ArrayList<TBinding>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TBinding){
    			list.add((TBinding)el);
    		}
    	}
    	return list;
    }
    
    public List<TImport> getImports(){
    	List<TImport> list = new ArrayList<TImport>();
    	for(TDocumented el: getAnyTopLevelOptionalElement()){
    		if(el instanceof TImport){
    			list.add((TImport)el);
    		}
    	}
    	return list;
    }
    
    public TMessage getMessage(QName name){
    	if(name.getNamespaceURI().equals(getTargetNamespace())){
    		for(TMessage msg : getMessages()){
        		if(msg.getName().equals(name.getLocalPart())){
        			return msg;
        		}
        	}
    	}
    	return null;
    }
// 
//    public TTypes getTypeforMessage(QName name){
//    	TMessage msg = getMessage(name);
//    	
//    	for(TTypes type : getTypes()){
//    		t
//    	}
//    	
//    }
//    
    
}


